from pygame import *
from time import time as timer
from random import randint

font.init()
font1 = font.SysFont('Arial', 80)
font2 = font.SysFont('Arial', 36)
win = font1.render('ГЛАВА ЗАВЕРШЕНА...', True, (255, 255, 255))
lose = font1.render('ВЫ ПОГИБЛИ!', True, (180, 0, 0))
helping = font1.render('НАЖМИТЕ Enter', True, (255, 255, 255))

img_back = 'town.png'
img_mafia = 'mafia.png'
img_enemy = 'enemy.png'
img_bullet = 'bullet.png'
img_laying = 'mafialaying.png'
img_enemy_bullet = 'enemybullet.png'
img_car = 'car.png'
life = 1
lost = 0
max_lost = 1
goal = 100
score = 0

# класс-родитель для других спрайтов
class GameSprite(sprite.Sprite):
 # конструктор класса
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # Вызываем конструктор класса (Sprite):
        sprite.Sprite.__init__(self)

        # каждый спрайт должен хранить свойство image - изображение
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed

        # каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

 # метод, отрисовывающий героя на окне
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))
 
    def update(self):
        global run
       
class Player(GameSprite):
    # метод для управления спрайтов стрелками клавиатуры
    def update(self):
        keys = key.get_pressed()
        if keys[K_a] and self.rect.top > 0:
            self.rect.x -= self.speed
        if keys[K_d] and self.rect.bottom < win_width:
            self.rect.x += self.speed
    def fire(self):
        bullet = Bullet(img_bullet, self.rect.centerx, self.rect.centery, 15, 20, -15)
        bullets.add(bullet)
        
class Enemy(GameSprite):
   # движение врага
    def update(self):
        self.rect.x -= self.speed
        global lost
        # исчезает, если дойдет до края экрана
        if self.rect.y > win_width:
            self.rect.y = 372
            self.rect.x = 0
            lost = lost + 1
    def enemyfire(self):
        enemy_bullet = EnemyBullet(img_enemy_bullet, self.rect.centerx, self.rect.top, 15, 20, -15)
        enemy_bullets.add(enemy_bullet)

# класс спрайта-пули  
class Bullet(GameSprite):
   # движение
   def update(self):
       self.rect.x -= self.speed
       # исчезает, если дойдет до края экрана
       if self.rect.x < 0:
           self.kill()

class EnemyBullet(GameSprite):
   # движение
   def update(self):
       self.rect.x += self.speed
       # исчезает, если дойдет до края экрана
       if self.rect.x > 1000:
           self.kill()

class Vechicle(GameSprite):
    def update(self):
        self.rect.x -= self.speed
        if self.rect.x < 0:
            self.kill()
            window.blit(win, (5, 200))
            finish = True

win_width = 700
win_height = 500
display.set_caption("Mafia")
window = display.set_mode((win_width, win_height))
background = transform.scale(image.load(img_back), (win_width, win_height))
clock = time.Clock()

tommy = Player(img_mafia, 5, win_height - 190, 100, 190, 30)

car = Vechicle(img_car, 750, 325, 368, 189, 0)

monsters = sprite.Group()
for i in range(1, 6):
   monster = Enemy(img_enemy, 750, 372, 100, 130, randint(3, 6))
   monsters.add(monster)
   
bullets = sprite.Group()

enemy_bullets = sprite.Group()

# переменная "игра закончилась": как только там True, в основном цикле перестают работать спрайты
finish = False
# Основной цикл игры:
run = True # флаг сбрасывается кнопкой закрытия окна

rel_time = False # флаг отвечающий за перезарядку

enemy_rel_time = False

num_fire = 0  # переменная для подсчта выстрела          

enemy_num_fire = 0

while run:

    # событие нажатия на кнопку Закрыть
    for e in event.get():
        if e.type == QUIT:
            run = False
        # событие нажатия на w - спрайт стреляет
        elif e.type == KEYDOWN:
            if e.key == K_w:
                # проверяем сколько выстеров сделано и не происходит ли перезарядка
                if num_fire < 10 and rel_time == False:
                    num_fire = num_fire + 1
                    tommy.fire()
                       
                if num_fire  >= 10 and rel_time == False : # если игрок сделал 5 выстрелов
                    last_time = timer() # засекаем время, когда это произошло
                    rel_time = True # ставив флаг перезарядки
            if e.key == K_e:
                tommy = Player(img_laying, 5, win_height - 75, 190, 90, 30)
                tommy_last_time = timer()
            if e.key == K_RETURN:
                car = Vechicle(img_car, 750, 325, 368, 189, 10)

    while enemy_num_fire < 1 and enemy_rel_time == False:
        enemy_num_fire = enemy_num_fire + 1
        monster.enemyfire()
                       
    while enemy_num_fire  >= 1 and enemy_rel_time == False : # если игрок сделал 5 выстрелов
        enemy_last_time = timer() # засекаем время, когда это произошло
        enemy_rel_time = True # ставив флаг перезарядки

    if not finish:

        # обновляем фон
        window.blit(background,(0,0))

        # производим движения спрайтов
        tommy.update()
        car.update()
        monsters.update()
        bullets.update()
        enemy_bullets.update()

        # обновляем их в новом местоположении при каждой итерации цикла
        tommy.reset()
        car.reset()
        monsters.draw(window)
        bullets.draw(window)
        enemy_bullets.draw(window)

        # перезарядка
        if enemy_rel_time == True:
            enemy_now_time = timer() # считываем время
         
            if enemy_now_time - enemy_last_time < 3: # пока не прошло 3 секунды выводим информацию о перезарядке
                reload = font2.render('', 1, (150, 0, 0))
                window.blit(reload, (260, 460))
            else:
                enemy_num_fire = 0   # обнуляем счетчик пуль
                enemy_rel_time = False # сбрасываем флаг перезарядки
        
        if tommy == Player(img_laying, 5, win_height - 75, 190, 90, 30):
            tommy_now_time = timer()
            if tommy_now_time - tommy_last_time < 3:
                reload = font2.render('', 1, (150, 0, 0))
                window.blit(reload, (260, 460))
            elif tommy_now_time - tommy_last_time >= 3:
                tommy = Player(img_mafia, 5, win_height - 190, 100, 190, 30)

        if rel_time == True:
            now_time = timer() # считываем время
         
            if now_time - last_time < 3: # пока не прошло 3 секунды выводим информацию о перезарядке
                reload = font2.render('Перезарядка', 1, (150, 0, 0))
                window.blit(reload, (260, 460))
            else:
                num_fire = 0   # обнуляем счетчик пуль
                rel_time = False # сбрасываем флаг перезарядки

        # проверка столкновения пули и монстров (и монстр, и пуля при касании исчезают)
        collides = sprite.groupcollide(monsters, bullets, True, True)
        for c in collides:
            # этот цикл повторится столько раз, сколько монстров подбито
            score = score + 1
            monster = Enemy(img_enemy, 750, 372, 100, 130, randint(5, 6))
            monsters.add(monster)

        # если спрайт коснулся врага уменьшает жизнь
        if sprite.spritecollide(tommy, monsters, False):
            sprite.spritecollide(tommy, monsters, True) 
            life = life -1

        if sprite.spritecollide(tommy, enemy_bullets, False):
            sprite.spritecollide(tommy, enemy_bullets, True) 
            life = life -1

        #проигрыш
        if life <= 0 or lost >= max_lost:
            finish = True # проиграли, ставим фон и больше не управляем спрайтами.
            window.blit(lose, (110, 200))


        # проверка выигрыша: сколько очков набрали?
        if score >= goal:
            window.blit(helping, (55, 200))

        # пишем текст на экране
        text = font2.render("Убийств: " + str(score), 1, (255, 255, 255))
        window.blit(text, (10, 20))

        display.update()

    #бонус: автоматический перезапуск игры
    else:
        finish = False
        score = 0
        lost = 0
        num_fire = 0
        life = 1
        for b in bullets:
            b.kill()
        for m in monsters:
            m.kill() 

        time.delay(40)
        for i in range(1, 6):
            monster = Enemy(img_enemy, 750, 372, 100, 130, randint(3, 6))
            monsters.add(monster)  

    time.delay(40)
